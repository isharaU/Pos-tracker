openapi: 3.0.0
info:
  title: Product Sales API
  description: API for managing products, sales, and stores.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /products:
    get:
      summary: Get a list of products
      description: Retrieve all available products from the store.
      operationId: getProducts
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error

    post:
      summary: Create a new product
      description: Add a new product to the store.
      operationId: createProduct
      requestBody:
        description: Product object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Successfully created the product
        '400':
          description: Invalid input data

  /products/{id}:
    get:
      summary: Get a product by ID
      description: Retrieve product details based on product ID.
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product to fetch
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal server error

    put:
      summary: Update a product by ID
      description: Update product details by its ID.
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product to update
          schema:
            type: integer
      requestBody:
        description: Updated product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Successfully updated the product
        '400':
          description: Invalid input data
        '404':
          description: Product not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a product by ID
      description: Delete the product based on product ID.
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product to delete
          schema:
            type: integer
      responses:
        '204':
          description: Successfully deleted the product
        '404':
          description: Product not found
        '500':
          description: Internal server error

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the product
        name:
          type: string
          description: The name of the product
        price:
          type: number
          format: float
          description: The price of the product
        description:
          type: string
          description: A brief description of the product
        stockQuantity:
          type: integer
          description: The available quantity in stock
      required:
        - id
        - name
        - price
        - stockQuantity